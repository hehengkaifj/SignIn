<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kktt.jesus.dao.source1.GotenProductDao">
  <resultMap id="BaseResultMap" type="com.kktt.jesus.dataobject.GotenProduct">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="sku" jdbcType="BIGINT" property="sku" />
    <result column="site" jdbcType="CHAR" property="site" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="sku_image_url" jdbcType="VARCHAR" property="skuImageUrl" />
    <result column="image_urls" jdbcType="OTHER" property="imageUrls" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
    <result column="category_first_name" jdbcType="VARCHAR" property="categoryFirstName" />
    <result column="category_second_name" jdbcType="VARCHAR" property="categorySecondName" />
    <result column="category_third_name" jdbcType="VARCHAR" property="categoryThirdName" />
    <result column="category_third_code" jdbcType="VARCHAR" property="categoryThirdCode" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="bullet_point" jdbcType="OTHER" property="bulletPoint" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="property" jdbcType="VARCHAR" property="property" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sku, site, `state`, sku_image_url, image_urls, title, price,
    inventory, category_first_name, category_second_name, category_third_name, category_third_code,
    description, bullet_point, keywords, property, create_time, update_time
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    select * from goten_product
  </select>

  <select id="selectValidProduct" resultMap="BaseResultMap">
    select * from goten_product where category_third_name = #{category} and state = 2 and
     <![CDATA[ price < 200 and inventory > 5 ]]>
  </select>

  <select id="selectDeskChair" resultMap="BaseResultMap">
   SELECT * FROM goten_product WHERE title LIKE "%${category}%" AND category_third_name = #{thirdCategory} and  state = 2  and
     <![CDATA[ price < 200 and inventory > 5 ]]>
  </select>

  <update id="batchUpdateState">
      update goten_product set state = #{state}
      where id in(
      <foreach collection="idList" item="item" separator=",">
        '${item}'
      </foreach>
      )
  </update>

  <insert id="insertIgnore" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
    insert ignore into goten_product (sku, site, `state`,
      sku_image_url, image_urls,
      title, price, inventory, 
      category_first_name, category_second_name, 
      category_third_name, category_third_code, description, 
      bullet_point, keywords, property, 
      create_time, update_time)
    values   (#{item.sku,jdbcType=BIGINT}, #{item.site,jdbcType=CHAR}, #{item.state,jdbcType=TINYINT},
      #{item.skuImageUrl,jdbcType=VARCHAR},  #{item.imageUrls,jdbcType=OTHER},
      #{item.title,jdbcType=VARCHAR}, #{item.price,jdbcType=DOUBLE}, #{item.inventory,jdbcType=INTEGER},
      #{item.categoryFirstName,jdbcType=VARCHAR}, #{item.categorySecondName,jdbcType=VARCHAR},
      #{item.categoryThirdName,jdbcType=VARCHAR}, #{item.categoryThirdCode,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR},
      #{item.bulletPoint,jdbcType=OTHER}, #{item.keywords,jdbcType=VARCHAR}, #{item.property,jdbcType=VARCHAR},
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="batchInsert" parameterType="java.util.List">
    insert ignore into goten_product (sku, site, `state`,
    sku_image_url, image_urls,
    title, price, inventory,
    category_first_name, category_second_name,
    category_third_name, category_third_code, description,
    bullet_point, keywords, property,
    create_time, update_time)
    VALUES
    <foreach collection="list" item="item" separator=",">
      (#{item.sku,jdbcType=BIGINT}, #{item.site,jdbcType=CHAR}, #{item.state,jdbcType=TINYINT},
      #{item.skuImageUrl,jdbcType=VARCHAR}, #{item.imageUrls,jdbcType=OTHER},
      #{item.title,jdbcType=VARCHAR}, #{item.price,jdbcType=DOUBLE}, #{item.inventory,jdbcType=INTEGER},
      #{item.categoryFirstName,jdbcType=VARCHAR}, #{item.categorySecondName,jdbcType=VARCHAR},
      #{item.categoryThirdName,jdbcType=VARCHAR}, #{item.categoryThirdCode,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR},
      #{item.bulletPoint,jdbcType=OTHER}, #{item.keywords,jdbcType=VARCHAR}, #{item.property,jdbcType=VARCHAR},
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>

  <update id="batchUpdatePrice" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" separator=";">
      UPDATE goten_product
      SET price = #{item.price},state = 1
      WHERE sku = #{item.sku}
    </foreach>
  </update>

  <update id="batchUpdateInventory" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" separator=";">
      UPDATE goten_product
      SET inventory = #{item.inventory},state = 2
      WHERE sku = #{item.sku}
    </foreach>
  </update>

</mapper>